name: publish_release

on:
  push:
    tags: ['*']

jobs:
  build:
    env:
      OUTPUT_DIR: edax_runner-bin
    runs-on: ubuntu-latest
    timeout-minutes: 15
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macOS-latest]
        include:
          - os: ubuntu-latest
            edax-runner_bin_name: edax_runner-linux
            edax_build_command: make build ARCH=x64-modern COMP=gcc OS=linux
            edax_bin_name: lEdax-x64-modern
          - os: macOS-latest
            edax-runner_bin_name: edax_runner-mac
            edax_build_command: make build ARCH=x64-modern COMP=gcc OS=osx
            edax_bin_name: mEdax
          - os: windows-latest
            edax-runner_bin_name: edax_runner-windows.exe
            edax_build_command: make build ARCH=x64-modern COMP=gcc OS=windows
            edax_bin_name: wEdax-x64-modern.exe

    steps:
      - uses: actions/checkout@v2

      - uses: cedx/setup-dart@v2
      - name: install dependencies
        run: pub get

      - name: build edax-runner
        env:
          dst: ${{ env.OUTPUT_DIR }}
          bin_name: ${{ matrix.edax-runner_bin_name }}
          edax_build_command: ${{ matrix.edax_build_command }}
          edax_bin_name: ${{ matrix.edax_bin_name }}
        run: |-
          sh scripts/build_edax.sh
          dart2native bin/edax_runner.dart -v -o ${{ env.dst }}/${{ env.bin_name }}

      - name: tar files
        run: mkdir -p dst && tar -cvf dst/${{ runner.os }}.tar ${{ env.OUTPUT_DIR }}

      # ref: https://github.community/t/simpler-way-to-run-steps-only-for-a-single-platform/16298
      - name: create release
        if: runner.os == 'Linux'
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

      - name: upload release asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: dst/${{ runner.os }}.tar
          asset_name: edax_runner_${{ runner.os }}.tar
          asset_content_type: application/x-tar

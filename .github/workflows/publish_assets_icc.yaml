name: publish_assets_icc

on:
  release:
    types: [created]

jobs:
  build:
    env:
      OUTPUT_DIR: edax_runner-bin
      PUBLISH_DIR: dst
      cache_version: 1
    runs-on: ${{ matrix.os }}
    timeout-minutes: 15
    strategy:
      matrix:
        os: [ubuntu-latest, macOS-latest] # ,windows-latest
        include:
          # NOTE: Intel Components variables are based on https://github.com/oneapi-src/oneapi-ci/blob/master/.github/workflows/build_all.yml
          # See: https://github.com/oneapi-src/oneapi-ci/issues/31
          - os: ubuntu-latest
            edax-runner_bin_name: edax_runner-linux
            edax_build_command: make build ARCH=x64-modern COMP=icc OS=linux
            edax_bin_name: lEdax-x64-modern
            intel_components_install_script: oneapi-ci/scripts/install_linux.sh
            intel_components_setup_script: |- # https://github.com/oneapi-src/oneapi-ci/blob/master/scripts/build_linux.sh
              LATEST_VERSION=$(ls -1 /opt/intel/oneapi/compiler/ | grep -v latest | sort | tail -1)
              source /opt/intel/oneapi/compiler/"$LATEST_VERSION"/env/vars.sh
              echo /opt/intel/oneapi/compiler/"$LATEST_VERSION"/linux/bin/intel64 >> $GITHUB_PATH
            hrckit_url: https://registrationcenter-download.intel.com/akdlm/irc_nas/17427/l_HPCKit_p_2021.1.0.2684_offline.sh
            intel_cpp_components: intel.oneapi.lin.dpcpp-cpp-compiler-pro
            intel_cpp_components_cache_path: /opt/intel/oneapi/compiler
            prepare_command_for_cache_restore_of_cpp_components: ''
          - os: macOS-latest
            edax-runner_bin_name: edax_runner-mac
            edax_build_command: make build ARCH=x64-modern COMP=icc OS=osx
            edax_bin_name: mEdax
            intel_components_install_script: oneapi-ci/scripts/install_macos.sh
            intel_components_setup_script: |- # https://github.com/oneapi-src/oneapi-ci/blob/master/scripts/build_mac.sh
              source /opt/intel/oneapi/setvars.sh
              LATEST_VERSION=$(ls -1 /opt/intel/oneapi/compiler/ | grep -v latest | sort | tail -1)
              echo /opt/intel/oneapi/compiler/$LATEST_VERSION/mac/bin/intel64 >> $GITHUB_PATH
            intel_cpp_components: intel.oneapi.mac.cpp-compiler
            hrckit_url: https://registrationcenter-download.intel.com/akdlm/irc_nas/17398/m_HPCKit_p_2021.1.0.2681_offline.dmg
            intel_cpp_components_cache_path: /opt/intel/oneapi
            prepare_command_for_cache_restore_of_cpp_components: sudo mkdir -p /opt/intel && sudo chown $USER /opt/intel
          # - os: windows-latest
          #   edax-runner_bin_name: edax_runner-windows.exe
          #   edax_build_command: make build ARCH=x64 COMP=icc CC=icl OS=windows
          #   edax_bin_name: wEdax-x64.exe
          #   intel_components_install_script: oneapi-ci/scripts/install_windows.bat
          #   intel_components_setup_script: |- # https://github.com/oneapi-src/oneapi-ci/blob/master/scripts/build_windows.bat
          #     LATEST_VERSION=$(ls -1 "C:/Program Files (x86)/Intel/oneAPI/compiler/" | grep -v latest | sort | tail -1)
          #     "C:/Program Files (x86)/Intel/oneAPI/compiler/$LATEST_VERSION/env/vars.bat"
          #     echo "C:/Program Files (x86)/Intel/oneAPI/compiler/$LATEST_VERSION/windows/bin/intel64" >> $GITHUB_PATH
          #   intel_cpp_components: intel.oneapi.win.cpp-compiler
          #   hrckit_url: https://registrationcenter-download.intel.com/akdlm/irc_nas/17392/w_HPCKit_p_2021.1.0.2682_offline.exe
          #   intel_cpp_components_cache_path: C:\Program Files (x86)\Intel\oneAPI\compiler
          #   prepare_command_for_cache_restore_of_cpp_components: |-
          #     # https://community.intel.com/t5/Intel-C-Compiler/Microsoft-Visual-C-not-found-in-path/td-p/1053875
          #     # https://software.intel.com/content/www/us/en/develop/articles/cdiag10114.html
          #     # https://github.com/actions/virtual-environments/blob/main/images/win/Windows2019-Readme.md
          #     # https://github.community/t/bat-script-not-found/119234
          #     # https://www.xlsoft.com/jp/products/intel/compilers/manual/cpp_all_os/GUID-2738DAA6-469E-43BE-9CD6-F3C8E0A6B4C3.htm

    steps:
      - uses: actions/checkout@v2

      - uses: cedx/setup-dart@v2
        with:
            architecture: x64
            release-channel: beta
      - name: install dependencies
        run: pub get

      - name: cache edax-reversi
        uses: actions/cache@v2
        with:
          path: edax-reversi
          key: ${{ env.cache_version }}-${{ runner.os }}-edax-reversi-${{ hashFiles('scripts/build_edax.sh') }}

      # setup Intel Compiler icc
      - uses: actions/checkout@v2
        with:
          repository: oneapi-src/oneapi-ci
          path: oneapi-ci
      - name: prepare for cache restore
        run: ${{ matrix.prepare_command_for_cache_restore_of_cpp_components }}
      - name: cache intel components
        id: cache-intel-components
        uses: actions/cache@v2
        with:
          path: ${{ matrix.intel_cpp_components_cache_path }}
          key: ${{ env.cache_version }}-${{ matrix.os }}-install-${{ matrix.hrckit_url }}-${{ matrix.intel_cpp_components }}
      - name: install intel components
        if: steps.cache-intel-components.outputs.cache-hit != 'true'
        run: ${{ matrix.intel_components_install_script }} ${{ matrix.hrckit_url }} ${{ matrix.intel_cpp_components }}
      - name: setup intel components
        run: ${{ matrix.intel_components_setup_script }}

      # # DEBUG
      # - name: setup tmate session for debug ssh
      #   if: runner.os == 'Windows'
      #   uses: mxschmitt/action-tmate@v3

      - name: build edax-reversi
        env:
          dst: ${{ env.OUTPUT_DIR }}
          bin_name: ${{ matrix.edax-runner_bin_name }}
          edax_build_command: ${{ matrix.edax_build_command }}
          edax_bin_name: ${{ matrix.edax_bin_name }}
        run: sh scripts/build_edax.sh

      - name: build edax-runner
        run: dart2native bin/edax_runner.dart -v -o ${{ env.OUTPUT_DIR }}/${{ matrix.edax-runner_bin_name }}

      - name: output build info
        run: scripts/output_build_info.sh ${{ env.OUTPUT_DIR }} icc

      - name: zip files (Windows)
        if: runner.os == 'Windows'
        run: mkdir -p ${{ env.PUBLISH_DIR }} && powershell Compress-Archive -Path ${{ env.OUTPUT_DIR }} -DestinationPath ${{ env.PUBLISH_DIR }}/${{ runner.os }}.zip
      - name: zip files (Linux, MacOS)
        if: runner.os == 'macOS' || runner.os == 'Linux'
        run: mkdir -p ${{ env.PUBLISH_DIR }} && zip -r ${{ env.PUBLISH_DIR }}/${{ runner.os }}.zip ${{ env.OUTPUT_DIR }}

      - uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ${{ env.PUBLISH_DIR }}/${{ runner.os }}.zip
          asset_name: edax_runner_${{ runner.os }}_icc.zip
          asset_content_type: application/zip
